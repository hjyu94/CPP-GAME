#include <iostream>

using namespace std;

void main()
{
	/* 
		동적할당: 메모리 생성을 원하는 시점에 할 수 있다. 
		메모리 영역 중 힙 영역에 공간이 할당된다. 
		힙의 특성상 메모리를 해제하기 전까지는 계속 남아있다. 
		동적 핟랑을 하고 메모리를 해제하지 않으면, 
		사용하지는 않지만 공간은 계속 잡혀있게 된다. 
		해당 공간은 다른곳에 사용이 불가능하다. 
		--> 이런 현상을 메모리 릭이라고 한다.
	
		동적 할당은 new 키워드를 이용해서 할 수 있다.
		(C언어에서 malloc())

		new 할당할 타입;

		delete 키워드를 이용해서 메모리를 해제한다

		new나 malloc 둗라 마찬가지로 힙 여역에 메모리 공간을 할당하고
		해당 메모리의 주소를 반환해준다.
	*/

	// int 크기만큼 공간을 힙에 할당한다.
	// 그 뒤 할당한 공간의 메모리 주소를 반환하여
	// pNumber에 넣어준다.
	// (pNumber는 stack에 있는 로컬변수)
	
	int*	pNumber = new int;
	*pNumber = 100;
	delete pNumber;

	// 동적배열 할당방법 : new 타입[개수];
	// 아래처럼 동적배열로 할당하면 메모리 공간에 400바이트 공간을 할당하고
	// 해당 메모리의 시작 주소를 반환한다.
	// 동적 배열을 지울 때는 delete[] 키워드를 이용한다

	int*	pArray = new int[100];
	pArray[1] = 300;
	delete[] pArray;
}